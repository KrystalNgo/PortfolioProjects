-- Standardize Date Format
SELECT SaleDateConverted, Convert(Date,SaleDate)
From NashvilleHousing

Update NashvilleHousing
Set SaleDate = Convert(Date,SaleDate)

Alter table NashvilleHousing
Add SaleDateConverted date;

Update NashvilleHousing
Set SaleDateConverted = Convert(date,SaleDate)

-- Populate Property Address data
Select *
From NashvilleHousing
--Where PropertyAddress is null
order by ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From  NashvilleHousing a
Join NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
Set PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
From  NashvilleHousing a
Join NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


Select PropertyAddress
From NashvilleHousing
Where PropertyAddress is Null


-- Breaking out Address into Individual Columns (Address, City, State)
Select PropertyAddress
From NashvilleHousing
--Where PropertyAddress is null
--order by ParcelID

Select
Substring(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) - 1) as Address
--CHARINDEX(',',PropertyAddress)
from NashvilleHousing

Select
Substring(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) - 1) as Address, 
Substring(PropertyAddress, CHARINDEX(',',PropertyAddress), Len(PropertyAddress)) as Address

from NashvilleHousing

-- Thêm cột vào bảng và update dữ liệu
Alter table NashvilleHousing
Add  PropertySplipAddress varchar(255);

Update NashvilleHousing
Set PropertySplipAddress = Substring(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) - 1)

Alter table NashvilleHousing
Add  PropertySplipCity varchar(255);

Update NashvilleHousing
Set PropertySplipCity = Substring(PropertyAddress, CHARINDEX(',',PropertyAddress)+1, Len(PropertyAddress))

Select *
From NashvilleHousing

Select OwnerAddress
From NashvilleHousing

Select 
parsename(Replace(ownerAddress, ',','.'),3) 
,parsename(Replace(ownerAddress, ',','.'),2)
,parsename(Replace(ownerAddress, ',','.'),1)
from NashvilleHousing

-- Cập nhật vào table 
Alter table NashvilleHousing
Add  OwerSplipAddress varchar(255);

Update NashvilleHousing
Set OwerSplipAddress = parsename(Replace(ownerAddress, ',','.'),3) 

Alter table NashvilleHousing
Add  OwerSplipCity varchar(255);

Update NashvilleHousing
Set OwerSplipCity = parsename(Replace(ownerAddress, ',','.'),2)

Alter table NashvilleHousing
Add  OwerSplipState varchar(255);

Update NashvilleHousing
Set OwerSplipState = parsename(Replace(ownerAddress, ',','.'),1)





-- Change Y and N to Yes and No in cột “Sold as vacant” Field

Select Distinct(SoldAsVacant), count(SoldAsVacant)
From NashvilleHousing
Group by SoldAsVacant
Order by 2

Select SoldAsVacant
, case when SoldAsVacant = 'Y' then 'Yes'
	   When SoldAsVacant = 'N' Then 'No'
	   ELSE SoldAsVacant 
	   END 
from NashvilleHousing

update NashvilleHousing
Set SoldAsVacant = case when SoldAsVacant = 'Y' then 'Yes'
	   When SoldAsVacant = 'N' Then 'No'
	   ELSE SoldAsVacant 
	   END 

----------------------------------------------------------------------------------------------------------------------------------
-- Remove Duplicates
--Xem thử có được ko
With RowNumCTE AS(
select *,
	Row_number() Over(
	Partition by ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 Order by
					UniqueID
					) row_num
from NashvilleHousing
--order by ParcelID
)
Select *
From RowNumCTE
where row_num > 1
order by PropertyAddress

--Xóa đi 
With RowNumCTE AS(
select *,
	Row_number() Over(
	Partition by ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 Order by
					UniqueID
					) row_num
from NashvilleHousing
--order by ParcelID
)
Delete
From RowNumCTE
where row_num > 1
--order by PropertyAddress


select *
from NashvilleHousing

-- Delete Unused Columns
select *
from NashvilleHousing

Alter Table NashvilleHousing
Drop column OwnerAddress, TaxDistrict, PropertyAddress 

Alter Table NashvilleHousing
Drop column SaleDate
